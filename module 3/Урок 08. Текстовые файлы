Сказал A, говори и B

line = open('say.txt').read().rstrip()
print(line.count('AB'))


Двоичный символ

symbol = ord(input())
with open('binary.txt', 'w') as file:
    print(bin(symbol)[2:], file=file)


Переписывание

with open('lines.txt', encoding='utf8') as in_file, \
        open('transformed_lines.txt', 'w', encoding='utf8') as out_file:
    for item in in_file:
        line = item.rstrip()
        if len(line) % 3 == 0 and len(line) % 5 == 0:
            print(line.title(), file=out_file)
        elif len(line) % 3 == 0:
            print(line.upper(), file=out_file)
        elif len(line) % 5 == 0:
            print(line.lower(), file=out_file)
        else:
            print(line.swapcase(), file=out_file)


Непростые

n, m = [int(x) for x in input().split()]
data = []
for i in range(n, m + 1):
    temp = []
    for j in range(2, int(i ** 0.5) + 1):
        if i % j == 0:
            temp.append(j)
            if i // j != j:
                temp.append(i // j)
    if temp:
        temp.sort()
        data.append(temp)
with open('divisors.txt', 'w') as out_file:
    for line in data:
        for n in line:
            print(n, file=out_file, end=' ')
        print(file=out_file)


Наименьшее возможное

with open('numbers.txt') as in_file, open('smallest.txt', 'w') as out_file:
    data = []
    for line in in_file:
        line = line.rstrip()
        temp = [line.count(x) for x in line]
        numbers = list(set(x for x in line if line.count(x) == max(temp)))
        numbers.sort()
        if numbers[0] == '0' and len(numbers) > 1:
            numbers[0], numbers[1] = numbers[1], numbers[0]
        print(''.join(numbers), file=out_file)


Фигура

from turtle import Turtle, done

filename = input()
with open(filename, encoding='utf8') as in_file:
    name = in_file.readline().rstrip()
    w = int(in_file.readline())
    x, y = [int(a) for a in in_file.readline().rstrip().split()]
    outline, fill = in_file.readline().rstrip().split()
fig = Turtle()
fig.color(outline, fill)
fig.pensize(w // 20)
fig.pu()
fig.goto(x, y)
fig.pd()
fig.begin_fill()
if name == 'Треугольник':
    for _ in range(3):
        fig.fd(w)
        fig.lt(120)
elif name == 'Квадрат':
    for _ in range(4):
        fig.fd(w)
        fig.lt(90)
elif name == 'Круг':
    fig.circle(w)
else:
    for _ in range(6):
        fig.fd(w)
        fig.lt(60)
fig.end_fill()
fig.pu()
fig.goto(0, y - 80)
fig.write(name, align='center', font=('Comfortaa', 36, 'bold'))
fig.ht()
done()