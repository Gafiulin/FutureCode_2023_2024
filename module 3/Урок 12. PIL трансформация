Иконка
from PIL import Image

w = int(input())
im = Image.open('flower.png')
im_new = im.resize((w, w))
im_new.save('icon.png')
Поярче!
from PIL import Image

w = int(input())
im = Image.open('picture.png')
x, y = im.size
pix = im.load()
for i in range(x):
    for j in range(y):
        temp = [max(s - w, 0) for s in pix[i, j]]
        pix[i, j] = tuple(temp)

im.save('result.png')
Зреет помидорчик
from PIL import Image

r, g, b = [int(x) for x in input().split()]
im = Image.open('input.png')
x, y = im.size
pix = im.load()
im_new = Image.new('RGB', (x, 3 * y))
pix_new = im_new.load()
for i in range(x):
    for j in range(y):
        if pix[i, j] == (255, 255, 255):
            pix_new[i, j] = r, g, b
        else:
            pix_new[i, j] = pix[i, j]
for i in range(x):
    for j in range(y):
        if pix[i, j] == (255, 255, 255):
            pix_new[i, j + y] = g, r, b
        else:
            pix_new[i, j + y] = pix[i, j]
for i in range(x):
    for j in range(y):
        if pix[i, j] == (255, 255, 255):
            pix_new[i, j + 2 * y] = 255, r - 50, b - 50
        else:
            pix_new[i, j + 2 * y] = pix[i, j]
im_new.save('tomato.png')
Портрет в рамке
from PIL import Image

w = int(input())
border = input()
im = Image.open('portrait.png')
x, y = im.size
im_new = Image.new('RGB', (x + 2 * w, y + 2 * w), border)
im_new.paste(im, (w, w))
im_new.save('border.png')
Тень
from PIL import Image

w = int(input())
im = Image.open('tree.png')
im_new = im.crop((50, 50, 450, 450))
pix = im_new.load()
for i in range(400):
    for j in range(400):
        if pix[i, j] != (255, 255, 255):
            pix[i, j] = (w, w, w)

im_new = im_new.rotate(-90)
im_new = im_new.resize((400, 200))
im.paste(im_new, (300, 400))
im.save('shadow.png')
Алёнушка
from PIL import Image, ImageFilter

w = int(input())
im = Image.open('picture.png')
x, y = im.size
im_new = Image.new('RGB', (x, y * 2))
im_new.paste(im, (0, 0))
im1 = im.transpose(1)
im1 = im1.filter(ImageFilter.GaussianBlur(w))
im_new.paste(im1, (0, y))
im_new.save('result.png')
Дополнительные задачи