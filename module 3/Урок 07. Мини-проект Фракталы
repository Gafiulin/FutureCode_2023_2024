Фрактальное дерево

from turtle import Turtle, done

frac = Turtle()
frac.speed(0)
n = int(input())
size = 10
length = 300
frac.color('maroon')
frac.pensize(size)
frac.pu()
frac.goto(0, -300)
frac.lt(90)
frac.pd()
# 0 итерация
frac.fd(length)
points = [{'xy': frac.pos(), 'angle': frac.heading()}]
# 1 итерация
for _ in range(n):
    size -= 1
    length //= 2
    points1 = []
    for item in points:
        frac.pensize(size)
        for angle in -45, 45:
            frac.pu()
            frac.goto(item['xy'])
            frac.pd()
            frac.seth(item['angle'] + angle)
            frac.fd(length)
            points1 += [{'xy': frac.pos(), 'angle': frac.heading()}]
    points = points1.copy() 
frac.ht()
done()


Перекладины

from turtle import Turtle, done

frac = Turtle()
frac.speed(0)
length_long = 300
size = 10
dot_size = 20
frac.color(input())
n = int(input())
points = [(0, 0)]
for _ in range(n + 1):
    length_short = length_long / 1.618
    frac.pensize(size)
    points1 = []
    for item in points:
        frac.seth(0)
        frac.pu()
        frac.goto(item)
        frac.pd()

        frac.back(length_long / 2)
        frac.lt(90)
        frac.fd(length_short / 2)

        # первая точка
        frac.dot(dot_size)
        points1.append(frac.pos())
        # вторая точка
        frac.back(length_short)
        frac.dot(dot_size)
        points1.append(frac.pos())
        # перекладина
        frac.fd(length_short / 2)
        frac.rt(90)
        frac.fd(length_long)
        frac.lt(90)
        frac.fd(length_short / 2)
        # третья точка
        frac.dot(dot_size)
        points1.append(frac.pos())
        frac.back(length_short)
        # четвертая точка
        frac.dot(dot_size)
        points1.append(frac.pos())
    points = points1.copy()
    length_long /= 2
    size -= 2
    dot_size -= 2
frac.ht()
done()


Квадрат Серпинского 2 итерация



Квадрат Серпинского